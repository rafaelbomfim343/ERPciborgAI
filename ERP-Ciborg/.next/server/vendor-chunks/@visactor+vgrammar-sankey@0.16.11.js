"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@visactor+vgrammar-sankey@0.16.11";
exports.ids = ["vendor-chunks/@visactor+vgrammar-sankey@0.16.11"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/format.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/format.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatLinkPath: () => (/* binding */ formatLinkPath),\n/* harmony export */   formatLinkPolygon: () => (/* binding */ formatLinkPolygon),\n/* harmony export */   formatNodeRect: () => (/* binding */ formatNodeRect),\n/* harmony export */   getAlignEndTexts: () => (/* binding */ getAlignEndTexts),\n/* harmony export */   getAlignStartTexts: () => (/* binding */ getAlignStartTexts),\n/* harmony export */   getBoundsOfNodes: () => (/* binding */ getBoundsOfNodes)\n/* harmony export */ });\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.19.7/node_modules/@visactor/vutils/es/common/isNil.js\");\n\n\nconst formatNodeRect = nodes => nodes.map((node => Object.assign({}, node, {\n    x: node.x0,\n    y: node.y0,\n    width: node.x1 - node.x0,\n    height: node.y1 - node.y0\n})));\n\nconst formatLinkPolygon = links => {\n    var _a;\n    return !(0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(null === (_a = null == links ? void 0 : links[0]) || void 0 === _a ? void 0 : _a.vertical) ? links.map((link => {\n        const half = link.thickness / 2, points = [ {\n            x: link.x0 - half,\n            y: link.y0\n        }, {\n            x: link.x1 - half,\n            y: link.y1\n        }, {\n            x: link.x1 + half,\n            y: link.y1\n        }, {\n            x: link.x0 + half,\n            y: link.y0\n        } ];\n        return Object.assign({}, link, {\n            points: points\n        });\n    })) : links.map((link => {\n        const half = link.thickness / 2, points = [ {\n            x: link.x0,\n            y: link.y0 - half\n        }, {\n            x: link.x1,\n            y: link.y1 - half\n        }, {\n            x: link.x1,\n            y: link.y1 + half\n        }, {\n            x: link.x0,\n            y: link.y0 + half\n        } ];\n        return Object.assign({}, link, {\n            points: points\n        });\n    }));\n};\n\nconst formatLinkPath = (links, round = !0) => {\n    var _a;\n    return !(0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(null === (_a = null == links ? void 0 : links[0]) || void 0 === _a ? void 0 : _a.vertical) ? links.map((link => {\n        const half = link.thickness / 2;\n        let y0 = link.y0, y1 = link.y1, midY = (y0 + y1) / 2, x00 = link.x0 - half, x01 = link.x0 + half, x10 = link.x1 - half, x11 = link.x1 + half;\n        return round && (y0 = Math.round(y0), y1 = Math.round(y1), midY = Math.round(midY), \n        x00 = Math.round(x00), x01 = Math.round(x01), x10 = Math.round(x10), x11 = Math.round(x11)), \n        Object.assign({}, link, {\n            path: `\\n            M${x00},${y0}\\n            C${x00},${midY},${x10},${midY},${x10},${y1}\\n            L${x11},${y1}\\n            C${x11},${midY},${x01},${midY},${x01},${y0}\\n            Z\\n            `\n        });\n    })) : links.map((link => {\n        const half = link.thickness / 2;\n        let x0 = link.x0, x1 = link.x1, midX = (x0 + x1) / 2, y00 = link.y0 - half, y01 = link.y0 + half, y10 = link.y1 - half, y11 = link.y1 + half;\n        return round && (x0 = Math.round(x0), x1 = Math.round(x1), midX = Math.round(midX), \n        y00 = Math.round(y00), y01 = Math.round(y01), y10 = Math.round(y10), y11 = Math.round(y11)), \n        Object.assign({}, link, {\n            path: `\\n          M${x0},${y00}\\n          C${midX},${y00},${midX},${y10},${x1},${y10}\\n          L${x1},${y11}\\n          C${midX},${y11},${midX},${y01},${x0},${y01}\\n          Z`\n        });\n    }));\n};\n\nconst getBoundsOfNodes = nodes => {\n    let x0 = 1 / 0, x1 = -1 / 0, y0 = 1 / 0, y1 = -1 / 0;\n    return nodes.forEach((node => {\n        x0 = Math.min(node.x0, x0), x1 = Math.max(node.x1, x1), y0 = Math.min(node.y0, y0), \n        y1 = Math.max(node.y1, y1);\n    })), {\n        x0: x0,\n        x1: x1,\n        y0: y0,\n        y1: y1,\n        width: x1 - x0,\n        height: y1 - y0\n    };\n};\n\nconst isNodeVertical = node => node.sourceLinks && node.sourceLinks.length ? !(0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(node.sourceLinks[0].x0) : !(!node.targetLinks || !node.targetLinks.length) && !(0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(node.targetLinks[0].x0);\n\nconst getAlignStartTexts = (nodes, offset = 0) => isNodeVertical(nodes[0]) ? nodes.map((node => ({\n    y: node.y1,\n    x: (node.x0 + node.x1) / 2,\n    datum: node.datum,\n    key: node.key\n}))) : nodes.map((node => ({\n    x: node.x1,\n    y: (node.y0 + node.y1) / 2,\n    datum: node.datum,\n    key: node.key\n})));\n\nconst getAlignEndTexts = (nodes, offset = 0) => isNodeVertical(nodes[0]) ? nodes.map((node => ({\n    y: node.y1 - offset,\n    x: (node.x0 + node.x1) / 2,\n    datum: node.datum,\n    key: node.key\n}))) : nodes.map((node => ({\n    x: node.x0 - offset,\n    y: (node.y0 + node.y1) / 2,\n    datum: node.datum,\n    key: node.key\n})));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHZpc2FjdG9yK3ZncmFtbWFyLXNhbmtleUAwLjE2LjExL25vZGVfbW9kdWxlcy9AdmlzYWN0b3IvdmdyYW1tYXItc2Fua2V5L2VzL2Zvcm1hdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXlDOztBQUVsQyxtRUFBbUU7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVNO0FBQ1A7QUFDQSxZQUFZLDREQUFLO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFVBQVU7QUFDViwrQkFBK0I7QUFDL0I7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFVBQVU7QUFDViwrQkFBK0I7QUFDL0I7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMOztBQUVPO0FBQ1A7QUFDQSxZQUFZLDREQUFLO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCLG9DQUFvQyxJQUFJLEdBQUcsR0FBRyxpQkFBaUIsSUFBSSxHQUFHLEtBQUssR0FBRyxJQUFJLEdBQUcsS0FBSyxHQUFHLElBQUksR0FBRyxHQUFHLGlCQUFpQixJQUFJLEdBQUcsR0FBRyxpQkFBaUIsSUFBSSxHQUFHLEtBQUssR0FBRyxJQUFJLEdBQUcsS0FBSyxHQUFHLElBQUksR0FBRyxHQUFHO0FBQzNMLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEIsa0NBQWtDLEdBQUcsR0FBRyxJQUFJLGVBQWUsS0FBSyxHQUFHLElBQUksR0FBRyxLQUFLLEdBQUcsSUFBSSxHQUFHLEdBQUcsR0FBRyxJQUFJLGVBQWUsR0FBRyxHQUFHLElBQUksZUFBZSxLQUFLLEdBQUcsSUFBSSxHQUFHLEtBQUssR0FBRyxJQUFJLEdBQUcsR0FBRyxHQUFHLElBQUk7QUFDbkwsU0FBUztBQUNULEtBQUs7QUFDTDs7QUFFTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsOEVBQThFLDREQUFLLGdGQUFnRiw0REFBSzs7QUFFaks7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRU07QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92aXNhY3Rvci1uZXh0LXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0B2aXNhY3Rvcit2Z3JhbW1hci1zYW5rZXlAMC4xNi4xMS9ub2RlX21vZHVsZXMvQHZpc2FjdG9yL3ZncmFtbWFyLXNhbmtleS9lcy9mb3JtYXQuanM/ODFiOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc05pbCB9IGZyb20gXCJAdmlzYWN0b3IvdnV0aWxzXCI7XG5cbmV4cG9ydCBjb25zdCBmb3JtYXROb2RlUmVjdCA9IG5vZGVzID0+IG5vZGVzLm1hcCgobm9kZSA9PiBPYmplY3QuYXNzaWduKHt9LCBub2RlLCB7XG4gICAgeDogbm9kZS54MCxcbiAgICB5OiBub2RlLnkwLFxuICAgIHdpZHRoOiBub2RlLngxIC0gbm9kZS54MCxcbiAgICBoZWlnaHQ6IG5vZGUueTEgLSBub2RlLnkwXG59KSkpO1xuXG5leHBvcnQgY29uc3QgZm9ybWF0TGlua1BvbHlnb24gPSBsaW5rcyA9PiB7XG4gICAgdmFyIF9hO1xuICAgIHJldHVybiAhaXNOaWwobnVsbCA9PT0gKF9hID0gbnVsbCA9PSBsaW5rcyA/IHZvaWQgMCA6IGxpbmtzWzBdKSB8fCB2b2lkIDAgPT09IF9hID8gdm9pZCAwIDogX2EudmVydGljYWwpID8gbGlua3MubWFwKChsaW5rID0+IHtcbiAgICAgICAgY29uc3QgaGFsZiA9IGxpbmsudGhpY2tuZXNzIC8gMiwgcG9pbnRzID0gWyB7XG4gICAgICAgICAgICB4OiBsaW5rLngwIC0gaGFsZixcbiAgICAgICAgICAgIHk6IGxpbmsueTBcbiAgICAgICAgfSwge1xuICAgICAgICAgICAgeDogbGluay54MSAtIGhhbGYsXG4gICAgICAgICAgICB5OiBsaW5rLnkxXG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIHg6IGxpbmsueDEgKyBoYWxmLFxuICAgICAgICAgICAgeTogbGluay55MVxuICAgICAgICB9LCB7XG4gICAgICAgICAgICB4OiBsaW5rLngwICsgaGFsZixcbiAgICAgICAgICAgIHk6IGxpbmsueTBcbiAgICAgICAgfSBdO1xuICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgbGluaywge1xuICAgICAgICAgICAgcG9pbnRzOiBwb2ludHNcbiAgICAgICAgfSk7XG4gICAgfSkpIDogbGlua3MubWFwKChsaW5rID0+IHtcbiAgICAgICAgY29uc3QgaGFsZiA9IGxpbmsudGhpY2tuZXNzIC8gMiwgcG9pbnRzID0gWyB7XG4gICAgICAgICAgICB4OiBsaW5rLngwLFxuICAgICAgICAgICAgeTogbGluay55MCAtIGhhbGZcbiAgICAgICAgfSwge1xuICAgICAgICAgICAgeDogbGluay54MSxcbiAgICAgICAgICAgIHk6IGxpbmsueTEgLSBoYWxmXG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIHg6IGxpbmsueDEsXG4gICAgICAgICAgICB5OiBsaW5rLnkxICsgaGFsZlxuICAgICAgICB9LCB7XG4gICAgICAgICAgICB4OiBsaW5rLngwLFxuICAgICAgICAgICAgeTogbGluay55MCArIGhhbGZcbiAgICAgICAgfSBdO1xuICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgbGluaywge1xuICAgICAgICAgICAgcG9pbnRzOiBwb2ludHNcbiAgICAgICAgfSk7XG4gICAgfSkpO1xufTtcblxuZXhwb3J0IGNvbnN0IGZvcm1hdExpbmtQYXRoID0gKGxpbmtzLCByb3VuZCA9ICEwKSA9PiB7XG4gICAgdmFyIF9hO1xuICAgIHJldHVybiAhaXNOaWwobnVsbCA9PT0gKF9hID0gbnVsbCA9PSBsaW5rcyA/IHZvaWQgMCA6IGxpbmtzWzBdKSB8fCB2b2lkIDAgPT09IF9hID8gdm9pZCAwIDogX2EudmVydGljYWwpID8gbGlua3MubWFwKChsaW5rID0+IHtcbiAgICAgICAgY29uc3QgaGFsZiA9IGxpbmsudGhpY2tuZXNzIC8gMjtcbiAgICAgICAgbGV0IHkwID0gbGluay55MCwgeTEgPSBsaW5rLnkxLCBtaWRZID0gKHkwICsgeTEpIC8gMiwgeDAwID0gbGluay54MCAtIGhhbGYsIHgwMSA9IGxpbmsueDAgKyBoYWxmLCB4MTAgPSBsaW5rLngxIC0gaGFsZiwgeDExID0gbGluay54MSArIGhhbGY7XG4gICAgICAgIHJldHVybiByb3VuZCAmJiAoeTAgPSBNYXRoLnJvdW5kKHkwKSwgeTEgPSBNYXRoLnJvdW5kKHkxKSwgbWlkWSA9IE1hdGgucm91bmQobWlkWSksIFxuICAgICAgICB4MDAgPSBNYXRoLnJvdW5kKHgwMCksIHgwMSA9IE1hdGgucm91bmQoeDAxKSwgeDEwID0gTWF0aC5yb3VuZCh4MTApLCB4MTEgPSBNYXRoLnJvdW5kKHgxMSkpLCBcbiAgICAgICAgT2JqZWN0LmFzc2lnbih7fSwgbGluaywge1xuICAgICAgICAgICAgcGF0aDogYFxcbiAgICAgICAgICAgIE0ke3gwMH0sJHt5MH1cXG4gICAgICAgICAgICBDJHt4MDB9LCR7bWlkWX0sJHt4MTB9LCR7bWlkWX0sJHt4MTB9LCR7eTF9XFxuICAgICAgICAgICAgTCR7eDExfSwke3kxfVxcbiAgICAgICAgICAgIEMke3gxMX0sJHttaWRZfSwke3gwMX0sJHttaWRZfSwke3gwMX0sJHt5MH1cXG4gICAgICAgICAgICBaXFxuICAgICAgICAgICAgYFxuICAgICAgICB9KTtcbiAgICB9KSkgOiBsaW5rcy5tYXAoKGxpbmsgPT4ge1xuICAgICAgICBjb25zdCBoYWxmID0gbGluay50aGlja25lc3MgLyAyO1xuICAgICAgICBsZXQgeDAgPSBsaW5rLngwLCB4MSA9IGxpbmsueDEsIG1pZFggPSAoeDAgKyB4MSkgLyAyLCB5MDAgPSBsaW5rLnkwIC0gaGFsZiwgeTAxID0gbGluay55MCArIGhhbGYsIHkxMCA9IGxpbmsueTEgLSBoYWxmLCB5MTEgPSBsaW5rLnkxICsgaGFsZjtcbiAgICAgICAgcmV0dXJuIHJvdW5kICYmICh4MCA9IE1hdGgucm91bmQoeDApLCB4MSA9IE1hdGgucm91bmQoeDEpLCBtaWRYID0gTWF0aC5yb3VuZChtaWRYKSwgXG4gICAgICAgIHkwMCA9IE1hdGgucm91bmQoeTAwKSwgeTAxID0gTWF0aC5yb3VuZCh5MDEpLCB5MTAgPSBNYXRoLnJvdW5kKHkxMCksIHkxMSA9IE1hdGgucm91bmQoeTExKSksIFxuICAgICAgICBPYmplY3QuYXNzaWduKHt9LCBsaW5rLCB7XG4gICAgICAgICAgICBwYXRoOiBgXFxuICAgICAgICAgIE0ke3gwfSwke3kwMH1cXG4gICAgICAgICAgQyR7bWlkWH0sJHt5MDB9LCR7bWlkWH0sJHt5MTB9LCR7eDF9LCR7eTEwfVxcbiAgICAgICAgICBMJHt4MX0sJHt5MTF9XFxuICAgICAgICAgIEMke21pZFh9LCR7eTExfSwke21pZFh9LCR7eTAxfSwke3gwfSwke3kwMX1cXG4gICAgICAgICAgWmBcbiAgICAgICAgfSk7XG4gICAgfSkpO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldEJvdW5kc09mTm9kZXMgPSBub2RlcyA9PiB7XG4gICAgbGV0IHgwID0gMSAvIDAsIHgxID0gLTEgLyAwLCB5MCA9IDEgLyAwLCB5MSA9IC0xIC8gMDtcbiAgICByZXR1cm4gbm9kZXMuZm9yRWFjaCgobm9kZSA9PiB7XG4gICAgICAgIHgwID0gTWF0aC5taW4obm9kZS54MCwgeDApLCB4MSA9IE1hdGgubWF4KG5vZGUueDEsIHgxKSwgeTAgPSBNYXRoLm1pbihub2RlLnkwLCB5MCksIFxuICAgICAgICB5MSA9IE1hdGgubWF4KG5vZGUueTEsIHkxKTtcbiAgICB9KSksIHtcbiAgICAgICAgeDA6IHgwLFxuICAgICAgICB4MTogeDEsXG4gICAgICAgIHkwOiB5MCxcbiAgICAgICAgeTE6IHkxLFxuICAgICAgICB3aWR0aDogeDEgLSB4MCxcbiAgICAgICAgaGVpZ2h0OiB5MSAtIHkwXG4gICAgfTtcbn07XG5cbmNvbnN0IGlzTm9kZVZlcnRpY2FsID0gbm9kZSA9PiBub2RlLnNvdXJjZUxpbmtzICYmIG5vZGUuc291cmNlTGlua3MubGVuZ3RoID8gIWlzTmlsKG5vZGUuc291cmNlTGlua3NbMF0ueDApIDogISghbm9kZS50YXJnZXRMaW5rcyB8fCAhbm9kZS50YXJnZXRMaW5rcy5sZW5ndGgpICYmICFpc05pbChub2RlLnRhcmdldExpbmtzWzBdLngwKTtcblxuZXhwb3J0IGNvbnN0IGdldEFsaWduU3RhcnRUZXh0cyA9IChub2Rlcywgb2Zmc2V0ID0gMCkgPT4gaXNOb2RlVmVydGljYWwobm9kZXNbMF0pID8gbm9kZXMubWFwKChub2RlID0+ICh7XG4gICAgeTogbm9kZS55MSxcbiAgICB4OiAobm9kZS54MCArIG5vZGUueDEpIC8gMixcbiAgICBkYXR1bTogbm9kZS5kYXR1bSxcbiAgICBrZXk6IG5vZGUua2V5XG59KSkpIDogbm9kZXMubWFwKChub2RlID0+ICh7XG4gICAgeDogbm9kZS54MSxcbiAgICB5OiAobm9kZS55MCArIG5vZGUueTEpIC8gMixcbiAgICBkYXR1bTogbm9kZS5kYXR1bSxcbiAgICBrZXk6IG5vZGUua2V5XG59KSkpO1xuXG5leHBvcnQgY29uc3QgZ2V0QWxpZ25FbmRUZXh0cyA9IChub2Rlcywgb2Zmc2V0ID0gMCkgPT4gaXNOb2RlVmVydGljYWwobm9kZXNbMF0pID8gbm9kZXMubWFwKChub2RlID0+ICh7XG4gICAgeTogbm9kZS55MSAtIG9mZnNldCxcbiAgICB4OiAobm9kZS54MCArIG5vZGUueDEpIC8gMixcbiAgICBkYXR1bTogbm9kZS5kYXR1bSxcbiAgICBrZXk6IG5vZGUua2V5XG59KSkpIDogbm9kZXMubWFwKChub2RlID0+ICh7XG4gICAgeDogbm9kZS54MCAtIG9mZnNldCxcbiAgICB5OiAobm9kZS55MCArIG5vZGUueTEpIC8gMixcbiAgICBkYXR1bTogbm9kZS5kYXR1bSxcbiAgICBrZXk6IG5vZGUua2V5XG59KSkpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/format.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/hierarchy.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/hierarchy.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateNodeValue: () => (/* binding */ calculateNodeValue)\n/* harmony export */ });\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.19.7/node_modules/@visactor/vutils/es/common/isNil.js\");\n\n\nconst calculateNodeValue = subTree => {\n    let sum = 0;\n    return subTree.forEach(((node, index) => {\n        var _a;\n        (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(node.value) && ((null === (_a = node.children) || void 0 === _a ? void 0 : _a.length) ? node.value = calculateNodeValue(node.children) : node.value = 0), \n        sum += Math.abs(node.value);\n    })), sum;\n};\n//# sourceMappingURL=hierarchy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHZpc2FjdG9yK3ZncmFtbWFyLXNhbmtleUAwLjE2LjExL25vZGVfbW9kdWxlcy9AdmlzYWN0b3IvdmdyYW1tYXItc2Fua2V5L2VzL2hpZXJhcmNoeS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5Qzs7QUFFbEM7QUFDUDtBQUNBO0FBQ0E7QUFDQSxRQUFRLDREQUFLO0FBQ2I7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Zpc2FjdG9yLW5leHQtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vQHZpc2FjdG9yK3ZncmFtbWFyLXNhbmtleUAwLjE2LjExL25vZGVfbW9kdWxlcy9AdmlzYWN0b3IvdmdyYW1tYXItc2Fua2V5L2VzL2hpZXJhcmNoeS5qcz8zZDg5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzTmlsIH0gZnJvbSBcIkB2aXNhY3Rvci92dXRpbHNcIjtcblxuZXhwb3J0IGNvbnN0IGNhbGN1bGF0ZU5vZGVWYWx1ZSA9IHN1YlRyZWUgPT4ge1xuICAgIGxldCBzdW0gPSAwO1xuICAgIHJldHVybiBzdWJUcmVlLmZvckVhY2goKChub2RlLCBpbmRleCkgPT4ge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGlzTmlsKG5vZGUudmFsdWUpICYmICgobnVsbCA9PT0gKF9hID0gbm9kZS5jaGlsZHJlbikgfHwgdm9pZCAwID09PSBfYSA/IHZvaWQgMCA6IF9hLmxlbmd0aCkgPyBub2RlLnZhbHVlID0gY2FsY3VsYXRlTm9kZVZhbHVlKG5vZGUuY2hpbGRyZW4pIDogbm9kZS52YWx1ZSA9IDApLCBcbiAgICAgICAgc3VtICs9IE1hdGguYWJzKG5vZGUudmFsdWUpO1xuICAgIH0pKSwgc3VtO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhpZXJhcmNoeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/hierarchy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/index.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/index.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SankeyLayout: () => (/* reexport safe */ _layout__WEBPACK_IMPORTED_MODULE_0__.SankeyLayout),\n/* harmony export */   formatLinkPath: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_2__.formatLinkPath),\n/* harmony export */   formatLinkPolygon: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_2__.formatLinkPolygon),\n/* harmony export */   formatNodeRect: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_2__.formatNodeRect),\n/* harmony export */   getAlignEndTexts: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_2__.getAlignEndTexts),\n/* harmony export */   getAlignStartTexts: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_2__.getAlignStartTexts),\n/* harmony export */   getBoundsOfNodes: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_2__.getBoundsOfNodes),\n/* harmony export */   registerSankeyHighlight: () => (/* binding */ registerSankeyHighlight),\n/* harmony export */   registerSankeyTransforms: () => (/* binding */ registerSankeyTransforms),\n/* harmony export */   sankeyTransform: () => (/* binding */ sankeyTransform)\n/* harmony export */ });\n/* harmony import */ var _visactor_vgrammar_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @visactor/vgrammar-core */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-core@0.16.11/node_modules/@visactor/vgrammar-core/es/core/factory.js\");\n/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transform */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/transform.js\");\n/* harmony import */ var _sankey_highlight__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sankey-highlight */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/sankey-highlight.js\");\n/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./layout */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/layout.js\");\n/* harmony import */ var _format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./format */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/format.js\");\n\n\n\n\n\n\n\n\nconst sankeyTransform = _transform__WEBPACK_IMPORTED_MODULE_1__.transform;\n\n\n\n\n\nconst registerSankeyTransforms = () => {\n    _visactor_vgrammar_core__WEBPACK_IMPORTED_MODULE_3__.Factory.registerTransform(\"sankey\", {\n        transform: _transform__WEBPACK_IMPORTED_MODULE_1__.transform,\n        markPhase: \"beforeJoin\"\n    }, !0);\n};\n\nconst registerSankeyHighlight = () => {\n    _visactor_vgrammar_core__WEBPACK_IMPORTED_MODULE_3__.Factory.registerInteraction(_sankey_highlight__WEBPACK_IMPORTED_MODULE_4__.SankeyHighlight.type, _sankey_highlight__WEBPACK_IMPORTED_MODULE_4__.SankeyHighlight);\n};\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHZpc2FjdG9yK3ZncmFtbWFyLXNhbmtleUAwLjE2LjExL25vZGVfbW9kdWxlcy9AdmlzYWN0b3IvdmdyYW1tYXItc2Fua2V5L2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFrRDs7QUFFVjs7QUFFYTs7QUFFYjs7QUFFakMsd0JBQXdCLGlEQUFTOztBQUVaOztBQUVIOztBQUVsQjtBQUNQLElBQUksNERBQU87QUFDWCxtQkFBbUIsaURBQVM7QUFDNUI7QUFDQSxLQUFLO0FBQ0w7O0FBRU87QUFDUCxJQUFJLDREQUFPLHFCQUFxQiw4REFBZSxPQUFPLDhEQUFlO0FBQ3JFO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92aXNhY3Rvci1uZXh0LXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0B2aXNhY3Rvcit2Z3JhbW1hci1zYW5rZXlAMC4xNi4xMS9ub2RlX21vZHVsZXMvQHZpc2FjdG9yL3ZncmFtbWFyLXNhbmtleS9lcy9pbmRleC5qcz9jZDhiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZhY3RvcnkgfSBmcm9tIFwiQHZpc2FjdG9yL3ZncmFtbWFyLWNvcmVcIjtcblxuaW1wb3J0IHsgdHJhbnNmb3JtIH0gZnJvbSBcIi4vdHJhbnNmb3JtXCI7XG5cbmltcG9ydCB7IFNhbmtleUhpZ2hsaWdodCB9IGZyb20gXCIuL3NhbmtleS1oaWdobGlnaHRcIjtcblxuZXhwb3J0IHsgU2Fua2V5TGF5b3V0IH0gZnJvbSBcIi4vbGF5b3V0XCI7XG5cbmV4cG9ydCBjb25zdCBzYW5rZXlUcmFuc2Zvcm0gPSB0cmFuc2Zvcm07XG5cbmV4cG9ydCAqIGZyb20gXCIuL2ludGVyZmFjZVwiO1xuXG5leHBvcnQgKiBmcm9tIFwiLi9mb3JtYXRcIjtcblxuZXhwb3J0IGNvbnN0IHJlZ2lzdGVyU2Fua2V5VHJhbnNmb3JtcyA9ICgpID0+IHtcbiAgICBGYWN0b3J5LnJlZ2lzdGVyVHJhbnNmb3JtKFwic2Fua2V5XCIsIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2Zvcm0sXG4gICAgICAgIG1hcmtQaGFzZTogXCJiZWZvcmVKb2luXCJcbiAgICB9LCAhMCk7XG59O1xuXG5leHBvcnQgY29uc3QgcmVnaXN0ZXJTYW5rZXlIaWdobGlnaHQgPSAoKSA9PiB7XG4gICAgRmFjdG9yeS5yZWdpc3RlckludGVyYWN0aW9uKFNhbmtleUhpZ2hsaWdodC50eXBlLCBTYW5rZXlIaWdobGlnaHQpO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/layout.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/layout.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SankeyLayout: () => (/* binding */ SankeyLayout)\n/* harmony export */ });\n/* harmony import */ var _hierarchy__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./hierarchy */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/hierarchy.js\");\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.19.7/node_modules/@visactor/vutils/es/common/array.js\");\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.19.7/node_modules/@visactor/vutils/es/common/isNil.js\");\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.19.7/node_modules/@visactor/vutils/es/common/clamper.js\");\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.19.7/node_modules/@visactor/vutils/es/common/isFunction.js\");\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.19.7/node_modules/@visactor/vutils/es/logger.js\");\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.19.7/node_modules/@visactor/vutils/es/common/toValidNumber.js\");\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.19.7/node_modules/@visactor/vutils/es/common/pickWithout.js\");\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.19.7/node_modules/@visactor/vutils/es/common/isString.js\");\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.19.7/node_modules/@visactor/vutils/es/common/clamp.js\");\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.19.7/node_modules/@visactor/vutils/es/common/isNumber.js\");\n/* harmony import */ var _visactor_vgrammar_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @visactor/vgrammar-util */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-util@0.16.11/node_modules/@visactor/vgrammar-util/es/field.js\");\n/* harmony import */ var _visactor_vgrammar_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @visactor/vgrammar-util */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-util@0.16.11/node_modules/@visactor/vgrammar-util/es/direction.js\");\n\n\n\n\n\n\nfunction left(node) {\n    return node.depth;\n}\n\nfunction right(node, maxDepth) {\n    return maxDepth - 1 - node.endDepth;\n}\n\nfunction justify(node, maxDepth) {\n    return node.sourceLinks.length ? node.depth : maxDepth - 1;\n}\n\nfunction center(node, maxDepth, nodeMap) {\n    return node.targetLinks.length ? node.depth : node.sourceLinks.length ? (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_0__.minInArray)(node.sourceLinks.map((link => nodeMap[link.target].depth))) - 1 : 0;\n}\n\nconst ascendingNodeBreadth = (a, b) => (null == a ? void 0 : a.y0) - (null == b ? void 0 : b.y0), calcDivideValue = (node, isTarget) => {\n    if ((0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(node.value)) return null;\n    const res = (isTarget ? node.targetLinks : node.sourceLinks).reduce(((res, sLink) => ((0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(sLink.value) ? res.count += 1 : res.sum += sLink.value, \n    res)), {\n        sum: 0,\n        count: 0\n    });\n    return res.count > 0 ? (node.value - res.sum) / res.count : null;\n}, alignFunctions = {\n    left: left,\n    right: right,\n    justify: justify,\n    center: center,\n    start: left,\n    end: right\n}, linkClampe = (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_2__.clamper)(0, 1);\n\nclass SankeyLayout {\n    constructor(options) {\n        this._ascendingSourceBreadth = (a, b) => ascendingNodeBreadth(this._nodeMap[a.source], this._nodeMap[b.source]) || a.index - b.index, \n        this._ascendingTargetBreadth = (a, b) => ascendingNodeBreadth(this._nodeMap[a.target], this._nodeMap[b.target]) || a.index - b.index, \n        this.options = Object.assign({}, SankeyLayout.defaultOptions, options);\n        const keyOption = this.options.nodeKey, keyFunc = (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(keyOption) ? keyOption : keyOption ? (0,_visactor_vgrammar_util__WEBPACK_IMPORTED_MODULE_4__.field)(keyOption) : null;\n        this._getNodeKey = keyFunc, this._logger = _visactor_vutils__WEBPACK_IMPORTED_MODULE_5__.Logger.getInstance(), this._alignFunc = (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this.options.setNodeLayer) ? node => this.options.setNodeLayer(node.datum) : alignFunctions[this.options.nodeAlign];\n    }\n    layout(data, config) {\n        if (!data) return null;\n        const viewBox = \"width\" in config ? {\n            x0: 0,\n            x1: config.width,\n            y0: 0,\n            y1: config.height,\n            width: config.width,\n            height: config.height\n        } : {\n            x0: Math.min(config.x0, config.x1),\n            x1: Math.max(config.x0, config.x1),\n            y0: Math.min(config.y0, config.y1),\n            y1: Math.max(config.y0, config.y1),\n            width: Math.abs(config.x1 - config.x0),\n            height: Math.abs(config.y1 - config.y0)\n        };\n        (0,_visactor_vgrammar_util__WEBPACK_IMPORTED_MODULE_6__.isVertical)(this.options.direction) ? this._viewBox = {\n            x0: viewBox.y0,\n            x1: viewBox.y1,\n            y0: viewBox.x0,\n            y1: viewBox.x1,\n            width: viewBox.height,\n            height: viewBox.width\n        } : this._viewBox = viewBox;\n        const result = this.computeNodeLinks(data), nodes = result.nodes;\n        let links = result.links;\n        if (this._nodeMap = result.nodeMap, this.computeNodeValues(nodes), this.computeNodeDepths(nodes), \n        [ \"right\", \"end\", \"justify\" ].includes(this.options.nodeAlign) && this.computeNodeEndDepths(nodes), \n        this._maxDepth <= 0) return null;\n        const columns = this.computeNodeBreadths(nodes);\n        if (this.computeLinkBreadths(nodes), nodes.forEach((node => {\n            node.sourceLinks = node.sourceLinks.filter((link => !(0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(link.source) && !(0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(link.target))), \n            node.targetLinks = node.targetLinks.filter((link => !(0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(link.source) && !(0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(link.target)));\n        })), links = links.filter((link => !(0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(link.source) && !(0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(link.target))), \n        (0,_visactor_vgrammar_util__WEBPACK_IMPORTED_MODULE_6__.isVertical)(this.options.direction)) if (this.options.inverse) {\n            const viewY1 = this._viewBox.x1;\n            nodes.forEach((node => {\n                const {y0: y0, y1: y1, x0: x0, x1: x1} = node;\n                node.y0 = viewY1 - x1, node.y1 = viewY1 - x0, node.x0 = y0, node.x1 = y1;\n            })), links.forEach((link => {\n                link.vertical = !0;\n                const {x0: x0, x1: x1, y0: y0, y1: y1} = link;\n                link.x0 = y0, link.x1 = y1, link.y0 = viewY1 - x0, link.y1 = viewY1 - x1;\n            }));\n        } else nodes.forEach((node => {\n            const {y0: y0, y1: y1} = node;\n            node.y0 = node.x0, node.y1 = node.x1, node.x0 = y0, node.x1 = y1;\n        })), links.forEach((link => {\n            link.vertical = !0;\n            const x0 = link.x0, x1 = link.x1;\n            link.x0 = link.y0, link.x1 = link.y1, link.y0 = x0, link.y1 = x1;\n        })); else this.options.inverse && (nodes.forEach((node => {\n            const {x0: x0, x1: x1} = node;\n            node.x0 = viewBox.x1 - x1, node.x1 = viewBox.x1 - x0;\n        })), links.forEach((link => {\n            link.x0 = viewBox.x1 - link.x0, link.x1 = viewBox.x1 - link.x1;\n        })));\n        return links.forEach((link => {\n            const sourceNode = this._nodeMap[link.source], targetNode = this._nodeMap[link.target];\n            link.sourceRect = {\n                x0: sourceNode.x0,\n                x1: sourceNode.x1,\n                y0: sourceNode.y0,\n                y1: sourceNode.y1\n            }, link.targetRect = {\n                x0: targetNode.x0,\n                x1: targetNode.x1,\n                y1: targetNode.y1,\n                y0: targetNode.y0\n            };\n        })), {\n            nodes: nodes,\n            links: links,\n            columns: columns\n        };\n    }\n    computeHierarchicNodeLinks(originalNodes) {\n        const nodes = [], links = [], nodeMap = {}, linkMap = {}, originalLinks = [];\n        (0,_hierarchy__WEBPACK_IMPORTED_MODULE_7__.calculateNodeValue)(originalNodes);\n        const doSubTree = (subTree, depth, parents) => {\n            subTree.forEach(((node, index) => {\n                const nodeKey = this._getNodeKey ? this._getNodeKey(node) : parents ? `${parents[parents.length - 1].key}-${index}` : `${depth}-${index}`, nodeValue = (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(node.value) ? 0 : (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_8__.toValidNumber)(node.value);\n                if (nodeMap[nodeKey]) nodeMap[nodeKey].value = void 0; else {\n                    const nodeElement = {\n                        depth: depth,\n                        datum: node,\n                        index: index,\n                        key: nodeKey,\n                        value: nodeValue,\n                        sourceLinks: [],\n                        targetLinks: []\n                    };\n                    nodeMap[nodeKey] = nodeElement, nodes.push(nodeElement);\n                }\n                parents && originalLinks.push({\n                    source: parents[parents.length - 1].key,\n                    target: nodeKey,\n                    value: nodeValue,\n                    parents: parents\n                }), node.children && node.children.length && doSubTree(node.children, depth + 1, parents ? parents.concat([ nodeMap[nodeKey] ]) : [ nodeMap[nodeKey] ]);\n            }));\n        };\n        return doSubTree(originalNodes, 0, null), originalLinks.forEach(((link, index) => {\n            const key = `${link.source}-${link.target}`, linkDatum = (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(link, [ \"parents\" ]);\n            if (linkDatum.parents = link.parents.map((node => (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(node, [ \"sourceLinks\", \"targetLinks\" ]))), \n            linkMap[key]) return linkMap[key].value += (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_8__.toValidNumber)(link.value), void linkMap[key].datum.push(linkDatum);\n            const linkElement = {\n                index: index,\n                key: `${link.source}-${link.target}`,\n                source: link.source,\n                target: link.target,\n                datum: [ linkDatum ],\n                value: link.value,\n                parents: link.parents.map((parent => parent.key))\n            };\n            links.push(linkElement), nodeMap[link.source].sourceLinks.push(linkElement), nodeMap[link.target].targetLinks.push(linkElement), \n            linkMap[key] = linkElement;\n        })), {\n            nodes: nodes,\n            links: links,\n            nodeMap: nodeMap\n        };\n    }\n    computeSourceTargetNodeLinks(data) {\n        const nodes = [], links = [], nodeMap = {};\n        data.nodes && data.nodes.forEach(((node, index) => {\n            const nodeElement = {\n                depth: -1,\n                datum: node,\n                index: index,\n                key: this._getNodeKey ? this._getNodeKey(node) : index,\n                value: node.value,\n                sourceLinks: [],\n                targetLinks: []\n            };\n            nodeMap[nodeElement.key] = nodeElement, nodes.push(nodeElement);\n        }));\n        const invalidLinks = [];\n        return data.links.forEach(((link, index) => {\n            const hasSource = !(0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(link.source), hasTarget = !(0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(link.target);\n            if (data.nodes && (!nodeMap[link.source] || !nodeMap[link.target])) return;\n            data.nodes || !hasSource || nodeMap[link.source] || (nodeMap[link.source] = {\n                value: void 0,\n                depth: -1,\n                index: nodes.length,\n                key: link.source,\n                datum: null,\n                sourceLinks: [],\n                targetLinks: []\n            }, nodes.push(nodeMap[link.source])), data.nodes || !hasTarget || nodeMap[link.target] || (nodeMap[link.target] = {\n                value: void 0,\n                depth: -1,\n                index: nodes.length,\n                key: link.target,\n                datum: null,\n                sourceLinks: [],\n                targetLinks: []\n            }, nodes.push(nodeMap[link.target]));\n            const linkElement = {\n                index: index,\n                source: link.source,\n                target: link.target,\n                datum: link,\n                value: link.value\n            };\n            this.options.divideNodeValueToLink && (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(link.value) && invalidLinks.push(linkElement), \n            links.push(linkElement), hasSource && nodeMap[link.source].sourceLinks.push(linkElement), \n            hasTarget && nodeMap[link.target].targetLinks.push(linkElement);\n        })), this.options.divideNodeValueToLink && invalidLinks.length && invalidLinks.forEach((link => {\n            const values = [ calcDivideValue(nodeMap[link.source]), calcDivideValue(nodeMap[link.target], !0) ].filter((entry => !(0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(entry)));\n            values.length && (link.value = (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_0__.minInArray)(values));\n        })), {\n            nodeMap: nodeMap,\n            nodes: nodes,\n            links: links\n        };\n    }\n    computeNodeLinks(data) {\n        let res;\n        \"links\" in data ? res = this.computeSourceTargetNodeLinks(data) : (this._isHierarchic = !0, \n        res = this.computeHierarchicNodeLinks(data.nodes));\n        let nodes = res.nodes;\n        const links = res.links;\n        if (this.options.linkSortBy) for (let i = 0, len = nodes.length; i < len; i++) nodes[i].sourceLinks.sort(this.options.linkSortBy), \n        nodes[i].targetLinks.sort(this.options.linkSortBy);\n        return this.options.dropIsolatedNode && (nodes = nodes.filter((node => node.targetLinks.length || node.sourceLinks.length))), \n        {\n            nodes: nodes,\n            links: links,\n            nodeMap: res.nodeMap\n        };\n    }\n    computeNodeValues(nodes) {\n        for (let i = 0, len = nodes.length; i < len; i++) {\n            const node = nodes[i];\n            node.value = Math.max((0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(node.value) ? 0 : (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_8__.toValidNumber)(node.value), node.sourceLinks.reduce(((sum, link) => {\n                var _a;\n                return sum + (null !== (_a = (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_8__.toValidNumber)(link.value)) && void 0 !== _a ? _a : 0);\n            }), 0), node.targetLinks.reduce(((sum, link) => {\n                var _a;\n                return sum + (null !== (_a = (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_8__.toValidNumber)(link.value)) && void 0 !== _a ? _a : 0);\n            }), 0));\n        }\n    }\n    computeNodeDepths(nodes) {\n        var _a;\n        const n = nodes.length;\n        let next, nextMap, current = nodes, depth = 0, maxDepth = -1;\n        const setNodeLayer = (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this.options.setNodeLayer) ? this.options.setNodeLayer : null;\n        for (;current.length && depth < n; ) {\n            next = [], nextMap = {};\n            for (let i = 0, curLen = current.length; i < curLen; i++) {\n                const node = current[i];\n                if (node && (node.depth = setNodeLayer && null !== (_a = setNodeLayer(node.datum)) && void 0 !== _a ? _a : depth, \n                setNodeLayer && (maxDepth = Math.max(node.depth, maxDepth)), node.sourceLinks && node.sourceLinks.length)) for (let j = 0, linkLen = node.sourceLinks.length; j < linkLen; j++) {\n                    const link = node.sourceLinks[j];\n                    nextMap[link.target] || (next.push(this._nodeMap[link.target]), nextMap[link.target] = !0);\n                }\n            }\n            current = next, depth += 1;\n        }\n        depth > n && this._logger.warn(\"Error: there is a circular link\"), this._maxDepth = setNodeLayer ? maxDepth + 1 : depth;\n    }\n    computeNodeEndDepths(nodes) {\n        const n = nodes.length;\n        let next, nextMap, current = nodes, depth = 0;\n        for (;current.length && depth < n; ) {\n            next = [], nextMap = {};\n            for (let i = 0, curLen = current.length; i < curLen; i++) {\n                const node = current[i];\n                if (node) {\n                    node.endDepth = depth;\n                    for (let j = 0, linkLen = node.targetLinks.length; j < linkLen; j++) {\n                        const link = node.targetLinks[j];\n                        nextMap[link.source] || (next.push(this._nodeMap[link.source]), nextMap[link.source] = !0);\n                    }\n                }\n            }\n            current = next, depth += 1;\n        }\n        depth > n && this._logger.warn(\"Error: there is a circular link\");\n    }\n    computeNodeLayers(nodes) {\n        const nodeWidthOption = this.options.nodeWidth, linkWidthOption = this.options.linkWidth, minStepWidth = this.options.minStepWidth, width = this._viewBox.width;\n        let nodeWidth = null, linkWidth = null, isEvenWidth = !1;\n        if ((0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(nodeWidthOption)) {\n            const ratio = (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(parseFloat(nodeWidthOption.replace(\"%\", \"\")) / 100, 0, 1);\n            let stepWidth = width / (this._maxDepth - 1 + ratio);\n            minStepWidth > 0 && (stepWidth = Math.max(minStepWidth, stepWidth)), nodeWidth = stepWidth * ratio, \n            linkWidth = stepWidth * (1 - ratio), isEvenWidth = !0;\n        } else if ((0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(nodeWidthOption)) {\n            if (nodeWidth = nodeWidthOption, (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(linkWidthOption)) linkWidth = linkWidthOption; else if ((0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(linkWidthOption)) {\n                let stepWidth = (width - nodeWidthOption) / (this._maxDepth - 1);\n                minStepWidth > 0 && (stepWidth = Math.max(minStepWidth, stepWidth)), linkWidth = stepWidth - nodeWidthOption;\n            }\n            isEvenWidth = !0;\n        } else (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(nodeWidthOption) && (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(linkWidthOption) && (linkWidth = linkWidthOption);\n        const columns = [];\n        for (let i = 0, len = nodes.length; i < len; i++) {\n            const node = nodes[i];\n            node.layer = this._isHierarchic ? node.depth : (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(Math.floor(this._alignFunc(node, this._maxDepth, this._nodeMap)), 0, this._maxDepth - 1);\n            const layer = node.layer;\n            layer === this._maxDepth - 1 && (node.isLastLayer = !0), isEvenWidth && (node.x0 = this._viewBox.x0 + layer * (nodeWidth + linkWidth), \n            node.x1 = node.x0 + nodeWidth), columns[layer] ? columns[layer].push(node) : columns[layer] = [ node ];\n        }\n        if (this.options.nodeSortBy) for (let j = 0, colLen = columns.length; j < colLen; j++) columns[j].sort(this.options.nodeSortBy);\n        if (!isEvenWidth && (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(nodeWidthOption)) {\n            let curLayerX = this._viewBox.x0;\n            for (let i = 0; i < this._maxDepth; i++) {\n                const column = columns[i];\n                let maxNodeWidth = 0, maxLinkWidth = 0;\n                for (let j = 0, colLen = column && column.length; j < colLen; j++) {\n                    const node = column[j], curNodeWidth = nodeWidthOption(node);\n                    node.x0 = curLayerX, node.x1 = curLayerX + curNodeWidth, maxNodeWidth = Math.max(nodeWidth, curNodeWidth);\n                    const sourceLinks = node.sourceLinks;\n                    for (let k = 0, linkLen = sourceLinks.length; k < linkLen; k++) {\n                        const link = sourceLinks[k], curLinkWidth = (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(linkWidthOption) ? linkWidthOption(link, this._viewBox) : linkWidth;\n                        maxLinkWidth = Math.max(maxLinkWidth, curLinkWidth);\n                    }\n                }\n                curLayerX += maxNodeWidth + maxLinkWidth;\n            }\n        }\n        return columns;\n    }\n    initializeNodeBreadths(columns) {\n        var _a, _b, _c;\n        const minLinkHeight = null !== (_a = this.options.minLinkHeight) && void 0 !== _a ? _a : 0;\n        let minNodeHeight = null !== (_b = this.options.minNodeHeight) && void 0 !== _b ? _b : 0;\n        const maxNodeHeight = null !== (_c = this.options.maxNodeHeight) && void 0 !== _c ? _c : 1 / 0;\n        let maxLinkHeight = this.options.maxLinkHeight;\n        ((0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(minNodeHeight) || minNodeHeight < minLinkHeight) && (minNodeHeight = minLinkHeight), \n        ((0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(maxLinkHeight) || maxLinkHeight > maxNodeHeight) && (maxLinkHeight = maxNodeHeight);\n        let ky = 0, getGapY = null, forceNodeHeight = null;\n        if ((0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this.options.nodeGap)) getGapY = this.options.nodeGap, ky = columns.reduce(((val, column) => {\n            const sumValue = column.reduce(((sum, node) => sum + node.value), 0), sumGapY = column.reduce(((sum, node) => sum + this.options.nodeGap(node)), 0);\n            return Math.min(val, (this._viewBox.height - sumGapY) / sumValue);\n        }), 1 / 0); else {\n            const maxRowCount = columns.reduce(((cnt, column) => Math.max(cnt, column.length)), 0), maxStepHeight = this._viewBox.height / maxRowCount;\n            let gapY = Math.min(this.options.nodeGap, maxStepHeight);\n            if (minNodeHeight + gapY > maxStepHeight && (gapY = minNodeHeight >= maxStepHeight ? maxStepHeight / 2 : (maxStepHeight - minNodeHeight) / 2, \n            minNodeHeight = Math.min(maxStepHeight - gapY, minNodeHeight)), getGapY = () => gapY, \n            this._gapY = gapY, this.options.equalNodeHeight) forceNodeHeight = this._viewBox.height / maxRowCount - gapY; else {\n                const calGapY = minNodeHeight > 0 ? Math.max(gapY, minNodeHeight) : gapY;\n                ky = columns.reduce(((val, column) => {\n                    const sumValue = column.reduce(((sum, node) => sum + node.value), 0);\n                    return Math.min(val, (this._viewBox.height - ((column.length - 1) * calGapY + minNodeHeight)) / sumValue);\n                }), 1 / 0);\n            }\n        }\n        const isStartGap = \"start\" === this.options.gapPosition, isMiddleGap = !isStartGap && \"end\" !== this.options.gapPosition, getNodeHeight = (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(this.options.nodeHeight) ? node => this.options.nodeHeight : (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this.options.nodeHeight) ? this.options.nodeHeight : forceNodeHeight > 0 ? node => forceNodeHeight : node => Math.max(node.value * ky, 0), getLinkHeight = (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(this.options.linkHeight) ? () => this.options.linkHeight : (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this.options.linkHeight) ? this.options.linkHeight : (link, sourceNode, sourceNodeHeight) => Math.min(Math.max(sourceNode.value ? sourceNodeHeight * linkClampe(link.value / sourceNode.value) : 0, minLinkHeight, 0), maxLinkHeight);\n        for (let i = 0, columnCount = columns.length; i < columnCount; i++) {\n            const nodes = columns[i];\n            if (!nodes || !nodes.length) continue;\n            let y = this._viewBox.y0, gapY = 0, nodeHeight = 0, calculatedNodeHeight = 0;\n            for (let j = 0, len = nodes.length; j < len; j++) {\n                const node = nodes[j];\n                gapY = getGapY(node), isStartGap && (y += gapY), calculatedNodeHeight = getNodeHeight(node), \n                nodeHeight = Math.min(Math.max(calculatedNodeHeight, minNodeHeight), maxNodeHeight), \n                node.y0 = y, node.y1 = y + nodeHeight, y = isStartGap ? node.y1 : node.y1 + gapY;\n                for (let k = 0, linkLen = node.sourceLinks.length; k < linkLen; k++) {\n                    const link = node.sourceLinks[k];\n                    link.thickness = getLinkHeight(link, node, calculatedNodeHeight);\n                }\n            }\n            let deltaY = this._viewBox.y1 - y + (isMiddleGap ? gapY : 0);\n            if (deltaY > 0) if (\"start\" === this.options.crossNodeAlign) ; else if (\"end\" === this.options.crossNodeAlign) for (let j = 0, len = nodes.length; j < len; ++j) {\n                const node = nodes[j];\n                node.y0 += deltaY, node.y1 += deltaY;\n            } else if (\"parent\" === this.options.crossNodeAlign) {\n                const sourceNodes = nodes.reduce(((res, node) => (node.targetLinks && node.targetLinks.length && node.targetLinks.forEach((link => {\n                    res[link.source] = !0;\n                })), res)), {});\n                if (Object.keys(sourceNodes).length && columns[i - 1] && columns[i - 1].length) {\n                    const prevSourceNodes = columns[i - 1].filter((node => sourceNodes[node.key]));\n                    if (prevSourceNodes && prevSourceNodes.length && prevSourceNodes[0].y0 !== nodes[0].y0) {\n                        const newDeltaY = prevSourceNodes[0].y0 - nodes[0].y0;\n                        for (let j = 0, len = nodes.length; j < len; ++j) {\n                            const node = nodes[j];\n                            node.y0 += newDeltaY, node.y1 += newDeltaY;\n                        }\n                    }\n                }\n            } else {\n                deltaY /= nodes.length + 1;\n                for (let j = 0, len = nodes.length; j < len; ++j) {\n                    const node = nodes[j];\n                    node.y0 += deltaY * (j + 1), node.y1 += deltaY * (j + 1);\n                }\n            } else if (deltaY < 0 && nodes.length > 1 && (deltaY /= nodes.length - 1, gapY + deltaY >= 0)) {\n                gapY += deltaY, this._gapY = Math.min(gapY);\n                for (let j = 1, len = nodes.length; j < len; ++j) {\n                    const node = nodes[j];\n                    node.y0 += deltaY * j, node.y1 += deltaY * j;\n                }\n            }\n            this.reorderLinks(nodes);\n        }\n    }\n    computeNodeBreadths(nodes) {\n        const columns = this.computeNodeLayers(nodes);\n        this.initializeNodeBreadths(columns);\n        const iterations = this.options.iterations;\n        if (!this._isHierarchic && !(0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this.options.setNodeLayer) && !(0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this.options.nodeGap)) for (let i = 0; i < iterations; ++i) {\n            const alpha = Math.pow(.99, i), beta = Math.max(1 - alpha, (i + 1) / iterations);\n            this.relaxRightToLeft(columns, alpha, beta), this.relaxLeftToRight(columns, alpha, beta);\n        }\n        return columns;\n    }\n    relaxLeftToRight(columns, alpha, beta) {\n        for (let i = 1, n = columns.length; i < n; ++i) {\n            const column = columns[i];\n            for (let j = 0, colLen = column.length; j < colLen; j++) {\n                const target = column[j];\n                let y = 0, w = 0;\n                for (let k = 0, linkLen = target.targetLinks.length; k < linkLen; k++) {\n                    const link = target.targetLinks[k], v = link.value * (target.layer - this._nodeMap[link.source].layer);\n                    y += this.targetTop(this._nodeMap[link.source], target) * v, w += v;\n                }\n                if (!(w > 0)) continue;\n                const dy = (y / w - target.y0) * alpha;\n                target.y0 += dy, target.y1 += dy, this.reorderNodeLinks(target);\n            }\n            (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.options.nodeSortBy) && column.sort(ascendingNodeBreadth), this.resolveCollisions(column, beta);\n        }\n    }\n    relaxRightToLeft(columns, alpha, beta) {\n        for (let i = columns.length - 2; i >= 0; --i) {\n            const column = columns[i];\n            for (let j = 0, colLen = column.length; j < colLen; j++) {\n                const source = column[j];\n                let y = 0, w = 0;\n                for (let k = 0, linkLen = source.sourceLinks.length; k < linkLen; k++) {\n                    const link = source.sourceLinks[k], v = link.value * (this._nodeMap[link.target].layer - source.layer);\n                    y += this.sourceTop(source, this._nodeMap[link.target]) * v, w += v;\n                }\n                if (!(w > 0)) continue;\n                const dy = (y / w - source.y0) * alpha;\n                source.y0 += dy, source.y1 += dy, this.reorderNodeLinks(source);\n            }\n            void 0 === this.options.nodeSortBy && column.sort(ascendingNodeBreadth), this.resolveCollisions(column, beta);\n        }\n    }\n    resolveCollisions(nodes, alpha) {\n        const i = nodes.length >> 1, subject = nodes[i];\n        this.resolveCollisionsBottomToTop(nodes, subject.y0 - this._gapY, i - 1, alpha), \n        this.resolveCollisionsTopToBottom(nodes, subject.y1 + this._gapY, i + 1, alpha), \n        this.resolveCollisionsBottomToTop(nodes, this._viewBox.y1, nodes.length - 1, alpha), \n        this.resolveCollisionsTopToBottom(nodes, this._viewBox.y0, 0, alpha);\n    }\n    resolveCollisionsTopToBottom(nodes, y, i, alpha) {\n        for (;i < nodes.length; ++i) {\n            const node = nodes[i], dy = (y - node.y0) * alpha;\n            dy > 1e-6 && (node.y0 += dy, node.y1 += dy), y = node.y1 + this._gapY;\n        }\n    }\n    resolveCollisionsBottomToTop(nodes, y, i, alpha) {\n        for (;i >= 0; --i) {\n            const node = nodes[i], dy = (node.y1 - y) * alpha;\n            dy > 1e-6 && (node.y0 -= dy, node.y1 -= dy), y = node.y0 - this._gapY;\n        }\n    }\n    targetTop(source, target) {\n        let i, len, link, y = source.y0 - (source.sourceLinks.length - 1) * this._gapY / 2;\n        for (i = 0, len = source.sourceLinks.length; i < len && (link = source.sourceLinks[i], \n        link.target !== target.key); i++) y += link.thickness + this._gapY;\n        for (i = 0, len = target.targetLinks.length; i < len && (link = target.targetLinks[i], \n        link.source !== source.key); i++) y -= link.thickness;\n        return y;\n    }\n    sourceTop(source, target) {\n        let i, len, link, y = target.y0 - (target.targetLinks.length - 1) * this._gapY / 2;\n        for (i = 0, len = target.targetLinks.length; i < len && (link = target.targetLinks[i], \n        link.source !== source.key); i++) y += link.thickness + this._gapY;\n        for (i = 0, len = source.sourceLinks.length; i < len && (link = source.sourceLinks[i], \n        link.target !== target.key); i++) y -= link.thickness;\n        return y;\n    }\n    computeLinkBreadthsNoOverlap(nodes) {\n        for (let i = 0, len = nodes.length; i < len; i++) {\n            const node = nodes[i];\n            let y0 = node.y0, reachBottom = !1;\n            for (let j = 0, linkLen = node.sourceLinks.length; j < linkLen; j++) {\n                const link = node.sourceLinks[j];\n                reachBottom || (link.y0 = y0 + link.thickness / 2), link.x0 = node.x1, y0 + link.thickness > node.y1 || reachBottom ? (link.y0 = node.y1 - link.thickness / 2, \n                reachBottom = !0) : y0 += link.thickness;\n            }\n            let y1 = node.y0;\n            reachBottom = !1;\n            for (let j = 0, linkLen = node.targetLinks.length; j < linkLen; j++) {\n                const link = node.targetLinks[j];\n                reachBottom || (link.y1 = y1 + link.thickness / 2), link.x1 = node.x0, y1 + link.thickness > node.y1 || reachBottom ? (link.y1 = node.y1 - link.thickness / 2, \n                reachBottom = !0) : y1 += link.thickness;\n            }\n        }\n    }\n    computeLinkBreadthsOverlap(nodes) {\n        const linkOverlap = this.options.linkOverlap;\n        for (let i = 0, len = nodes.length; i < len; i++) {\n            const node = nodes[i], pos = \"start\" === linkOverlap ? node.y0 : \"end\" === linkOverlap ? node.y1 : (node.y0 + node.y1) / 2, sign = \"start\" === linkOverlap ? .5 : \"end\" === linkOverlap ? -.5 : 0;\n            for (let j = 0, linkLen = node.sourceLinks.length; j < linkLen; j++) {\n                const link = node.sourceLinks[j];\n                link.y0 = pos + sign * link.thickness, link.x0 = node.x1;\n            }\n            for (let j = 0, linkLen = node.targetLinks.length; j < linkLen; j++) {\n                const link = node.targetLinks[j];\n                link.y1 = pos + sign * link.thickness, link.x1 = node.x0;\n            }\n        }\n    }\n    computeLinkBreadths(nodes) {\n        this.options.linkOverlap ? this.computeLinkBreadthsOverlap(nodes) : this.computeLinkBreadthsNoOverlap(nodes);\n    }\n    reorderNodeLinks(node) {\n        if ((0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.options.linkSortBy)) {\n            const targetLinks = node.targetLinks, sourceLinks = node.sourceLinks;\n            for (let j = 0, linkLen = targetLinks.length; j < linkLen; j++) {\n                const link = targetLinks[j];\n                this._nodeMap[link.source].sourceLinks.sort(this._ascendingTargetBreadth);\n            }\n            for (let j = 0, linkLen = sourceLinks.length; j < linkLen; j++) {\n                const link = sourceLinks[j];\n                this._nodeMap[link.target].targetLinks.sort(this._ascendingSourceBreadth);\n            }\n        }\n    }\n    reorderLinks(nodes) {\n        if ((0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.options.linkSortBy)) for (let i = 0, len = nodes.length; i < len; i++) {\n            const node = nodes[i];\n            node.sourceLinks.sort(this._ascendingTargetBreadth), node.targetLinks.sort(this._ascendingSourceBreadth);\n        }\n    }\n}\n\nSankeyLayout.defaultOptions = {\n    iterations: 6,\n    nodeAlign: \"justify\",\n    direction: \"horizontal\",\n    nodeWidth: 24,\n    nodeGap: 8,\n    crossNodeAlign: \"middle\",\n    dropIsolatedNode: !0\n};\n//# sourceMappingURL=layout.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/layout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/sankey-highlight.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/sankey-highlight.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SankeyHighlight: () => (/* binding */ SankeyHighlight)\n/* harmony export */ });\n/* harmony import */ var _visactor_vgrammar_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @visactor/vgrammar-core */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-core@0.16.11/node_modules/@visactor/vgrammar-core/es/interactions/base.js\");\n/* harmony import */ var _visactor_vgrammar_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @visactor/vgrammar-core */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-core@0.16.11/node_modules/@visactor/vgrammar-core/es/graph/enums.js\");\n/* harmony import */ var _visactor_vutils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @visactor/vutils */ \"(ssr)/./node_modules/.pnpm/@visactor+vutils@0.19.7/node_modules/@visactor/vutils/es/common/array.js\");\n\n\n\n\nclass SankeyHighlight extends _visactor_vgrammar_core__WEBPACK_IMPORTED_MODULE_0__.BaseInteraction {\n    constructor(view, options) {\n        var _a, _b;\n        super(view, options), this.type = SankeyHighlight.type, this.highlightAdjacentElement = (element, isNode) => {\n            var _a, _b;\n            const datum = element.getDatum(), allLinkElements = null !== (_b = null === (_a = this._linkMark) || void 0 === _a ? void 0 : _a.elements) && void 0 !== _b ? _b : [], highlightNodes = isNode ? [ datum.key ] : [ datum.source, datum.target ], getIsHighlight = isNode ? linkDatum => linkDatum.target === datum.key || linkDatum.source === datum.key : linkDatum => linkDatum.source === datum.source && linkDatum.target === datum.target;\n            return allLinkElements.forEach((linkEl => {\n                const linkDatum = linkEl.getDatum();\n                getIsHighlight(linkDatum) ? (linkEl.removeState(this.options.blurState), linkEl.addState(this.options.highlightState, {\n                    ratio: 1\n                }), highlightNodes.includes(linkDatum.source) || highlightNodes.push(linkDatum.source), \n                highlightNodes.includes(linkDatum.target) || highlightNodes.push(linkDatum.target)) : (linkEl.removeState(this.options.highlightState), \n                linkEl.addState(this.options.blurState));\n            })), highlightNodes;\n        }, this.highlightRelatedBySourceTarget = (element, isNode) => {\n            var _a, _b, _c, _d, _e, _f;\n            if (!isNode) return this.highlightAdjacentElement(element, isNode);\n            const datum = element.getDatum(), allNodeElements = null !== (_b = null === (_a = this._nodeMark) || void 0 === _a ? void 0 : _a.elements) && void 0 !== _b ? _b : [], highlightNodes = [], allLinkElements = null !== (_d = null === (_c = this._linkMark) || void 0 === _c ? void 0 : _c.elements) && void 0 !== _d ? _d : [], highlightLinks = [], allNodes = allNodeElements.reduce(((res, nodeEl) => {\n                const nodeDatum = nodeEl.getDatum();\n                return res[null == nodeDatum ? void 0 : nodeDatum.key] = {\n                    datum: nodeDatum,\n                    el: nodeEl\n                }, res;\n            }), {}), downNodes = [ datum ], upNodes = [ datum ];\n            for (;downNodes.length; ) {\n                const first = downNodes.pop();\n                (null === (_e = null == first ? void 0 : first.sourceLinks) || void 0 === _e ? void 0 : _e.length) && first.sourceLinks.forEach((link => {\n                    highlightLinks.push(link), allNodes[link.target] && downNodes.push(allNodes[link.target].datum);\n                }));\n            }\n            for (;upNodes.length; ) {\n                const first = upNodes.pop();\n                (null === (_f = null == first ? void 0 : first.targetLinks) || void 0 === _f ? void 0 : _f.length) && first.targetLinks.forEach((link => {\n                    highlightLinks.push(link), allNodes[link.source] && upNodes.push(allNodes[link.source].datum);\n                }));\n            }\n            return allLinkElements.forEach((linkEl => {\n                const linkDatum = linkEl.getDatum();\n                highlightLinks.some((link => link.source === linkDatum.source && link.target === linkDatum.target)) ? (linkEl.removeState(this.options.blurState), \n                linkEl.addState(this.options.highlightState, {\n                    ratio: 1\n                }), highlightNodes.includes(linkDatum.source) || highlightNodes.push(linkDatum.source), \n                highlightNodes.includes(linkDatum.target) || highlightNodes.push(linkDatum.target)) : (linkEl.removeState(this.options.highlightState), \n                linkEl.addState(this.options.blurState));\n            })), highlightNodes;\n        }, this.highlightRelatedElement = (element, isNode) => {\n            var _a, _b, _c, _d, _e;\n            const allLinkElements = null !== (_b = null === (_a = this._linkMark) || void 0 === _a ? void 0 : _a.elements) && void 0 !== _b ? _b : [];\n            if (!!!(null === (_e = null === (_d = null === (_c = allLinkElements[0]) || void 0 === _c ? void 0 : _c.getDatum) || void 0 === _d ? void 0 : _d.call(_c)) || void 0 === _e ? void 0 : _e.parents)) return this.highlightRelatedBySourceTarget(element, isNode);\n            const datum = element.getDatum(), highlightNodes = isNode ? [ datum.key ] : [ datum.source, datum.target ], upstreamLinks = this.parseUpstreamLinks(element, isNode);\n            return allLinkElements.forEach((linkEl => {\n                const linkDatum = linkEl.getDatum(), originalDatum = (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__.array)(linkDatum.datum);\n                if (!isNode && linkDatum.source === datum.source && linkDatum.target === datum.target) return linkEl.removeState(this.options.blurState), \n                void linkEl.addState(this.options.highlightState, {\n                    ratio: 1\n                });\n                const selectedDatum = isNode ? originalDatum.filter((entry => {\n                    var _a;\n                    return (null !== (_a = entry.parents) && void 0 !== _a ? _a : []).some((par => par.key === datum.key));\n                })) : originalDatum.filter((entry => {\n                    var _a;\n                    return (null !== (_a = entry.parents) && void 0 !== _a ? _a : []).some((par => par.key === datum.target));\n                }));\n                if (selectedDatum && selectedDatum.length) {\n                    highlightNodes.includes(linkDatum.source) || highlightNodes.push(linkDatum.source), \n                    highlightNodes.includes(linkDatum.target) || highlightNodes.push(linkDatum.target);\n                    const ratio = selectedDatum.reduce(((sum, d) => sum + d.value), 0) / linkDatum.value;\n                    return linkEl.removeState(this.options.blurState), void linkEl.addState(this.options.highlightState, {\n                        ratio: ratio\n                    });\n                }\n                const upSelectedLink = upstreamLinks.find((upLink => upLink.source === linkDatum.source && upLink.target === linkDatum.target));\n                if (upSelectedLink) return highlightNodes.includes(linkDatum.source) || highlightNodes.push(linkDatum.source), \n                highlightNodes.includes(linkDatum.target) || highlightNodes.push(linkDatum.target), \n                linkEl.removeState(this.options.blurState), void linkEl.addState(this.options.highlightState, {\n                    ratio: upSelectedLink.value / linkDatum.value\n                });\n                linkEl.removeState(this.options.highlightState), linkEl.addState(this.options.blurState);\n            })), highlightNodes;\n        }, this.highlightElement = (element, isNode) => {\n            var _a, _b;\n            const allNodeElements = null !== (_b = null === (_a = this._nodeMark) || void 0 === _a ? void 0 : _a.elements) && void 0 !== _b ? _b : [], highlightNodes = \"related\" === this.options.effect ? this.highlightRelatedElement(element, isNode) : this.highlightAdjacentElement(element, isNode);\n            allNodeElements.forEach((el => {\n                highlightNodes.includes(el.getDatum().key) ? (el.removeState(this.options.blurState), \n                el.addState(this.options.highlightState)) : (el.removeState(this.options.highlightState), \n                el.addState(this.options.blurState));\n            }));\n        }, this.handleStart = e => {\n            e.element && (e.element.mark === this._nodeMark ? (this._activeElement = e.element, \n            this.highlightElement(e.element, !0)) : e.element.mark === this._linkMark && (this._activeElement = e.element, \n            this.highlightElement(e.element, !1)));\n        }, this.handleReset = e => {\n            e.element && e.element === this._activeElement && this.clearPrevElements();\n        }, this.options = Object.assign({}, SankeyHighlight.defaultOptions, options), this._nodeMark = null === (_a = view.getMarksBySelector(this.options.nodeSelector)) || void 0 === _a ? void 0 : _a[0], \n        this._linkMark = null === (_b = view.getMarksBySelector(this.options.linkSelector)) || void 0 === _b ? void 0 : _b[0];\n    }\n    getEvents() {\n        return [ {\n            type: this.options.trigger,\n            handler: this.handleStart\n        }, {\n            type: this.options.triggerOff,\n            handler: this.handleReset\n        } ];\n    }\n    clearPrevElements() {\n        [ this._linkMark, this._nodeMark ].forEach((mark => {\n            mark && mark.elements.forEach((el => {\n                el.hasState(this.options.highlightState) && el.removeState(this.options.highlightState), \n                el.hasState(this.options.blurState) && el.removeState(this.options.blurState);\n            }));\n        }));\n    }\n    parseUpstreamLinks(element, isNode) {\n        const datum = element.getDatum();\n        return (isNode ? datum.targetLinks : (0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__.array)(datum)).reduce(((res, link) => ((0,_visactor_vutils__WEBPACK_IMPORTED_MODULE_1__.array)(link.datum).forEach((dividedLink => {\n            var _a;\n            const parents = null !== (_a = dividedLink.parents) && void 0 !== _a ? _a : [ {\n                key: dividedLink.source\n            } ], len = isNode ? parents.length : parents.length - 1;\n            for (let i = 0; i < len; i++) {\n                const source = parents[i].key, target = parents[i + 1] ? parents[i + 1].key : datum.key, value = dividedLink.value, existingItem = res.find((item => item.source === source && item.target === target));\n                existingItem ? existingItem.value += value : res.push({\n                    source: source,\n                    target: target,\n                    value: value\n                });\n            }\n        })), res)), []);\n    }\n}\n\nSankeyHighlight.type = \"sankey-highlight\", SankeyHighlight.defaultOptions = {\n    highlightState: _visactor_vgrammar_core__WEBPACK_IMPORTED_MODULE_2__.InteractionStateEnum.highlight,\n    blurState: _visactor_vgrammar_core__WEBPACK_IMPORTED_MODULE_2__.InteractionStateEnum.blur,\n    trigger: \"pointerover\",\n    triggerOff: \"pointerout\",\n    effect: \"related\"\n};\n//# sourceMappingURL=sankey-highlight.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/sankey-highlight.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/transform.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/transform.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   transform: () => (/* binding */ transform)\n/* harmony export */ });\n/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./layout */ \"(ssr)/./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/layout.js\");\n\n\nconst transform = (options, upstreamData) => {\n    const res = new _layout__WEBPACK_IMPORTED_MODULE_0__.SankeyLayout(options).layout(Array.isArray(upstreamData) ? upstreamData[0] : upstreamData, \"width\" in options ? {\n        width: options.width,\n        height: options.height\n    } : {\n        x0: options.x0,\n        x1: options.x1,\n        y0: options.y0,\n        y1: options.y1\n    });\n    return res ? [ res ] : [];\n};\n//# sourceMappingURL=transform.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHZpc2FjdG9yK3ZncmFtbWFyLXNhbmtleUAwLjE2LjExL25vZGVfbW9kdWxlcy9AdmlzYWN0b3IvdmdyYW1tYXItc2Fua2V5L2VzL3RyYW5zZm9ybS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3Qzs7QUFFakM7QUFDUCxvQkFBb0IsaURBQVk7QUFDaEM7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92aXNhY3Rvci1uZXh0LXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0B2aXNhY3Rvcit2Z3JhbW1hci1zYW5rZXlAMC4xNi4xMS9ub2RlX21vZHVsZXMvQHZpc2FjdG9yL3ZncmFtbWFyLXNhbmtleS9lcy90cmFuc2Zvcm0uanM/ZDRlMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTYW5rZXlMYXlvdXQgfSBmcm9tIFwiLi9sYXlvdXRcIjtcblxuZXhwb3J0IGNvbnN0IHRyYW5zZm9ybSA9IChvcHRpb25zLCB1cHN0cmVhbURhdGEpID0+IHtcbiAgICBjb25zdCByZXMgPSBuZXcgU2Fua2V5TGF5b3V0KG9wdGlvbnMpLmxheW91dChBcnJheS5pc0FycmF5KHVwc3RyZWFtRGF0YSkgPyB1cHN0cmVhbURhdGFbMF0gOiB1cHN0cmVhbURhdGEsIFwid2lkdGhcIiBpbiBvcHRpb25zID8ge1xuICAgICAgICB3aWR0aDogb3B0aW9ucy53aWR0aCxcbiAgICAgICAgaGVpZ2h0OiBvcHRpb25zLmhlaWdodFxuICAgIH0gOiB7XG4gICAgICAgIHgwOiBvcHRpb25zLngwLFxuICAgICAgICB4MTogb3B0aW9ucy54MSxcbiAgICAgICAgeTA6IG9wdGlvbnMueTAsXG4gICAgICAgIHkxOiBvcHRpb25zLnkxXG4gICAgfSk7XG4gICAgcmV0dXJuIHJlcyA/IFsgcmVzIF0gOiBbXTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFuc2Zvcm0uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@visactor+vgrammar-sankey@0.16.11/node_modules/@visactor/vgrammar-sankey/es/transform.js\n");

/***/ })

};
;