/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/simplify-geometry@0.0.2";
exports.ids = ["vendor-chunks/simplify-geometry@0.0.2"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/simplify-geometry@0.0.2/node_modules/simplify-geometry/lib/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/simplify-geometry@0.0.2/node_modules/simplify-geometry/lib/index.js ***!
  \************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Line = __webpack_require__(/*! ./line */ \"(ssr)/./node_modules/.pnpm/simplify-geometry@0.0.2/node_modules/simplify-geometry/lib/line.js\");\n\nvar simplifyGeometry = function(points, tolerance){\n\n  var dmax = 0;\n  var index = 0;\n\n  for (var i = 1; i <= points.length - 2; i++){\n    var d = new Line(points[0], points[points.length - 1]).perpendicularDistance(points[i]);\n    if (d > dmax){\n      index = i;\n      dmax = d;\n    }\n  }\n\n  if (dmax > tolerance){\n    var results_one = simplifyGeometry(points.slice(0, index), tolerance);\n    var results_two = simplifyGeometry(points.slice(index, points.length), tolerance);\n\n    var results = results_one.concat(results_two);\n\n  }\n\n  else if (points.length > 1) {\n\n    results = [points[0], points[points.length - 1]];\n\n  }\n\n  else {\n\n    results = [points[0]];\n\n  }\n\n  return results;\n\n\n}\n\nmodule.exports = simplifyGeometry;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vc2ltcGxpZnktZ2VvbWV0cnlAMC4wLjIvbm9kZV9tb2R1bGVzL3NpbXBsaWZ5LWdlb21ldHJ5L2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxXQUFXLG1CQUFPLENBQUMsNkdBQVE7O0FBRTNCOztBQUVBO0FBQ0E7O0FBRUEsa0JBQWtCLHdCQUF3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOzs7QUFHQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Zpc2FjdG9yLW5leHQtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vc2ltcGxpZnktZ2VvbWV0cnlAMC4wLjIvbm9kZV9tb2R1bGVzL3NpbXBsaWZ5LWdlb21ldHJ5L2xpYi9pbmRleC5qcz9hZGRjIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBMaW5lID0gcmVxdWlyZSgnLi9saW5lJyk7XG5cbnZhciBzaW1wbGlmeUdlb21ldHJ5ID0gZnVuY3Rpb24ocG9pbnRzLCB0b2xlcmFuY2Upe1xuXG4gIHZhciBkbWF4ID0gMDtcbiAgdmFyIGluZGV4ID0gMDtcblxuICBmb3IgKHZhciBpID0gMTsgaSA8PSBwb2ludHMubGVuZ3RoIC0gMjsgaSsrKXtcbiAgICB2YXIgZCA9IG5ldyBMaW5lKHBvaW50c1swXSwgcG9pbnRzW3BvaW50cy5sZW5ndGggLSAxXSkucGVycGVuZGljdWxhckRpc3RhbmNlKHBvaW50c1tpXSk7XG4gICAgaWYgKGQgPiBkbWF4KXtcbiAgICAgIGluZGV4ID0gaTtcbiAgICAgIGRtYXggPSBkO1xuICAgIH1cbiAgfVxuXG4gIGlmIChkbWF4ID4gdG9sZXJhbmNlKXtcbiAgICB2YXIgcmVzdWx0c19vbmUgPSBzaW1wbGlmeUdlb21ldHJ5KHBvaW50cy5zbGljZSgwLCBpbmRleCksIHRvbGVyYW5jZSk7XG4gICAgdmFyIHJlc3VsdHNfdHdvID0gc2ltcGxpZnlHZW9tZXRyeShwb2ludHMuc2xpY2UoaW5kZXgsIHBvaW50cy5sZW5ndGgpLCB0b2xlcmFuY2UpO1xuXG4gICAgdmFyIHJlc3VsdHMgPSByZXN1bHRzX29uZS5jb25jYXQocmVzdWx0c190d28pO1xuXG4gIH1cblxuICBlbHNlIGlmIChwb2ludHMubGVuZ3RoID4gMSkge1xuXG4gICAgcmVzdWx0cyA9IFtwb2ludHNbMF0sIHBvaW50c1twb2ludHMubGVuZ3RoIC0gMV1dO1xuXG4gIH1cblxuICBlbHNlIHtcblxuICAgIHJlc3VsdHMgPSBbcG9pbnRzWzBdXTtcblxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdHM7XG5cblxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNpbXBsaWZ5R2VvbWV0cnk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/simplify-geometry@0.0.2/node_modules/simplify-geometry/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/simplify-geometry@0.0.2/node_modules/simplify-geometry/lib/line.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/simplify-geometry@0.0.2/node_modules/simplify-geometry/lib/line.js ***!
  \***********************************************************************************************/
/***/ ((module) => {

eval("var Line = function(p1, p2){\n\n  this.p1 = p1;\n  this.p2 = p2;\n\n};\n\nLine.prototype.rise = function() {\n\n  return this.p2[1] - this.p1[1];\n\n};\n\nLine.prototype.run = function() {\n\n  return this.p2[0] - this.p1[0];\n\n};\n\nLine.prototype.slope = function(){\n\n  return  this.rise() / this.run();\n\n};\n\nLine.prototype.yIntercept = function(){\n\n  return this.p1[1] - (this.p1[0] * this.slope(this.p1, this.p2));\n\n};\n\nLine.prototype.isVertical = function() {\n\n  return !isFinite(this.slope());\n\n};\n\nLine.prototype.isHorizontal = function() {\n\n  return this.p1[1] == this.p2[1];\n\n};\n\nLine.prototype._perpendicularDistanceHorizontal = function(point){\n\n  return Math.abs(this.p1[1] - point[1]);\n\n};\n\nLine.prototype._perpendicularDistanceVertical = function(point){\n\n  return Math.abs(this.p1[0] - point[0]);\n\n};\n\nLine.prototype._perpendicularDistanceHasSlope = function(point){\n  var slope = this.slope();\n  var y_intercept = this.yIntercept();\n\n  return Math.abs((slope * point[0]) - point[1] + y_intercept) / Math.sqrt((Math.pow(slope, 2)) + 1);\n\n};\n\nLine.prototype.perpendicularDistance = function(point){\n  if (this.isVertical()) {\n\n    return this._perpendicularDistanceVertical(point);\n\n  }\n\n  else if (this.isHorizontal()){\n\n    return this._perpendicularDistanceHorizontal(point);\n\n  }\n\n  else {\n\n    return this._perpendicularDistanceHasSlope(point);\n\n  }\n\n};\n\nmodule.exports = Line;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vc2ltcGxpZnktZ2VvbWV0cnlAMC4wLjIvbm9kZV9tb2R1bGVzL3NpbXBsaWZ5LWdlb21ldHJ5L2xpYi9saW5lLmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92aXNhY3Rvci1uZXh0LXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3NpbXBsaWZ5LWdlb21ldHJ5QDAuMC4yL25vZGVfbW9kdWxlcy9zaW1wbGlmeS1nZW9tZXRyeS9saWIvbGluZS5qcz9lOTQ5Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBMaW5lID0gZnVuY3Rpb24ocDEsIHAyKXtcblxuICB0aGlzLnAxID0gcDE7XG4gIHRoaXMucDIgPSBwMjtcblxufTtcblxuTGluZS5wcm90b3R5cGUucmlzZSA9IGZ1bmN0aW9uKCkge1xuXG4gIHJldHVybiB0aGlzLnAyWzFdIC0gdGhpcy5wMVsxXTtcblxufTtcblxuTGluZS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24oKSB7XG5cbiAgcmV0dXJuIHRoaXMucDJbMF0gLSB0aGlzLnAxWzBdO1xuXG59O1xuXG5MaW5lLnByb3RvdHlwZS5zbG9wZSA9IGZ1bmN0aW9uKCl7XG5cbiAgcmV0dXJuICB0aGlzLnJpc2UoKSAvIHRoaXMucnVuKCk7XG5cbn07XG5cbkxpbmUucHJvdG90eXBlLnlJbnRlcmNlcHQgPSBmdW5jdGlvbigpe1xuXG4gIHJldHVybiB0aGlzLnAxWzFdIC0gKHRoaXMucDFbMF0gKiB0aGlzLnNsb3BlKHRoaXMucDEsIHRoaXMucDIpKTtcblxufTtcblxuTGluZS5wcm90b3R5cGUuaXNWZXJ0aWNhbCA9IGZ1bmN0aW9uKCkge1xuXG4gIHJldHVybiAhaXNGaW5pdGUodGhpcy5zbG9wZSgpKTtcblxufTtcblxuTGluZS5wcm90b3R5cGUuaXNIb3Jpem9udGFsID0gZnVuY3Rpb24oKSB7XG5cbiAgcmV0dXJuIHRoaXMucDFbMV0gPT0gdGhpcy5wMlsxXTtcblxufTtcblxuTGluZS5wcm90b3R5cGUuX3BlcnBlbmRpY3VsYXJEaXN0YW5jZUhvcml6b250YWwgPSBmdW5jdGlvbihwb2ludCl7XG5cbiAgcmV0dXJuIE1hdGguYWJzKHRoaXMucDFbMV0gLSBwb2ludFsxXSk7XG5cbn07XG5cbkxpbmUucHJvdG90eXBlLl9wZXJwZW5kaWN1bGFyRGlzdGFuY2VWZXJ0aWNhbCA9IGZ1bmN0aW9uKHBvaW50KXtcblxuICByZXR1cm4gTWF0aC5hYnModGhpcy5wMVswXSAtIHBvaW50WzBdKTtcblxufTtcblxuTGluZS5wcm90b3R5cGUuX3BlcnBlbmRpY3VsYXJEaXN0YW5jZUhhc1Nsb3BlID0gZnVuY3Rpb24ocG9pbnQpe1xuICB2YXIgc2xvcGUgPSB0aGlzLnNsb3BlKCk7XG4gIHZhciB5X2ludGVyY2VwdCA9IHRoaXMueUludGVyY2VwdCgpO1xuXG4gIHJldHVybiBNYXRoLmFicygoc2xvcGUgKiBwb2ludFswXSkgLSBwb2ludFsxXSArIHlfaW50ZXJjZXB0KSAvIE1hdGguc3FydCgoTWF0aC5wb3coc2xvcGUsIDIpKSArIDEpO1xuXG59O1xuXG5MaW5lLnByb3RvdHlwZS5wZXJwZW5kaWN1bGFyRGlzdGFuY2UgPSBmdW5jdGlvbihwb2ludCl7XG4gIGlmICh0aGlzLmlzVmVydGljYWwoKSkge1xuXG4gICAgcmV0dXJuIHRoaXMuX3BlcnBlbmRpY3VsYXJEaXN0YW5jZVZlcnRpY2FsKHBvaW50KTtcblxuICB9XG5cbiAgZWxzZSBpZiAodGhpcy5pc0hvcml6b250YWwoKSl7XG5cbiAgICByZXR1cm4gdGhpcy5fcGVycGVuZGljdWxhckRpc3RhbmNlSG9yaXpvbnRhbChwb2ludCk7XG5cbiAgfVxuXG4gIGVsc2Uge1xuXG4gICAgcmV0dXJuIHRoaXMuX3BlcnBlbmRpY3VsYXJEaXN0YW5jZUhhc1Nsb3BlKHBvaW50KTtcblxuICB9XG5cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gTGluZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/simplify-geometry@0.0.2/node_modules/simplify-geometry/lib/line.js\n");

/***/ })

};
;